<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>22098292D_Drink Ordering System</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous" />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"></script>
    <script type="module" src="js/manageMap.js"></script>
    <script src="../js/logout.js"></script>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="container">
        <a class="navbar-brand" href="../homePage.html">
          <img src="../img/logo.png" alt="Logo" height="60" class="d-inline-block align-text-top" />
        </a>

        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNav"
          aria-controls="navbarNav"
          aria-expanded="false"
          aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
          <div class="navbar-nav gap-lg-10">
            <a class="nav-link link-primary fw-bold px-5 text-center" href="../managePage1.html">Film Management</a>
            <a class="nav-link px-5 text-center" href="../managePage2.html">All Booking History</a>
            <a class="nav-link px-5 text-center" href="../managePage3.html">All User Information</a>
          </div>
        </div>
        <div class="ms-auto">
          <button class="btn btn-outline-primary" onclick="handleLogout()">Logout</button>
        </div>
      </div>
    </nav>
    <main>
      <div class="container my-5">
        <h2 class="text-center fw-bold mb-4">Manage the Seat Table</h2>

        <!-- Seat Map -->
        <div class="d-flex justify-content-center mb-3">
          <svg id="seatMap" width="700" height="350" style="background-color: #87cefa">
            <!-- Row and Column Labels -->
            <script>
              document.addEventListener('DOMContentLoaded', () => {
                const mapInfo = <%-   JSON.stringify(mapInfo || {}) %>;
                const mapID = <%-   JSON.stringify(mapID || {}) %>;

                const seatTypes = {
                  unavailable: '#FFFFFF', // 不可用座位
                  available: '#32CD32', // 可用座位
                  selected: '#FF6347', // 已选座位
                };

                const seatWidth = 40; // 座位宽度
                const seatHeight = 40; // 座位高度
                const seatSpacing = 10; // 座位间距

                const seatMapContainer = document.getElementById('seatMap');

                // 绘制列号
                const columns = Array.from(new Set(Object.keys(mapInfo).map((key) => parseInt(key.slice(1)))));
                columns.forEach((col, index) => {
                  const colLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');
                  colLabel.setAttribute('x', 40 + index * (seatWidth + seatSpacing) + seatWidth / 2);
                  colLabel.setAttribute('y', 30); // 放置在顶部
                  colLabel.setAttribute('text-anchor', 'middle');
                  colLabel.setAttribute('font-size', '16');
                  colLabel.setAttribute('font-weight', 'bold');
                  colLabel.textContent = col;
                  seatMapContainer.appendChild(colLabel);
                });

                // 绘制行号
                const rows = Array.from(new Set(Object.keys(mapInfo).map((key) => key[0])));
                rows.forEach((row, index) => {
                  const rowLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');
                  rowLabel.setAttribute('x', 20); // 放置在左侧
                  rowLabel.setAttribute('y', 50 + index * (seatHeight + seatSpacing) + seatHeight / 2);
                  rowLabel.setAttribute('text-anchor', 'middle');
                  rowLabel.setAttribute('font-size', '16');
                  rowLabel.setAttribute('font-weight', 'bold');
                  rowLabel.textContent = row;
                  seatMapContainer.appendChild(rowLabel);
                });

                // 绘制座位图
                Object.entries(mapInfo).forEach(([seatID, seatData]) => {
                  const row = seatID[0];
                  const col = parseInt(seatID.slice(1));

                  let seatType;
                  let userID;
                  if (!seatData.exist) {
                    seatType = 'unavailable';
                  } else if (seatData.selected) {
                    seatType = 'selected';
                    userID = seatData.userID;
                  } else {
                    seatType = 'available';
                  }

                  createSeat(row, col, seatType,seatData.userID, seatData.luxury,mapID);
                });

                function createSeat(row, col, type,userID, isLuxury,mapID) {
                  const rowIndex = row.charCodeAt(0) - 65; // A=0, B=1, etc.
                  const colIndex = col - 1;

                  const seatGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');
                  seatGroup.setAttribute('id', `${row}${col}`);

                  const seat = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
                  seat.setAttribute('x', 40 + colIndex * (seatWidth + seatSpacing));
                  seat.setAttribute('y', 40 + rowIndex * (seatHeight + seatSpacing));
                  seat.setAttribute('width', seatWidth);
                  seat.setAttribute('height', seatHeight);
                  seat.setAttribute('rx', 8); // 圆角矩形
                  seat.setAttribute('ry', 8);
                  seat.setAttribute('fill', seatTypes[type]);
                  seat.setAttribute('stroke', '#000');
                  seat.setAttribute('stroke-width', '2');

                  // 如果是 selected 座位，附加 userID
                  if (type === 'selected') {
                    seat.userID = userID || 'Unknown'; // 直接将 userID 存储为 JS 对象的属性
                  }

                  seat.addEventListener('click', () => selectSeat(seat, type, mapID, `${row}${col}`));
                  seatGroup.appendChild(seat);

                  if (isLuxury) {
                    const star = document.createElementNS('http://www.w3.org/2000/svg', 'text');
                    star.setAttribute('x', 40 + colIndex * (seatWidth + seatSpacing) + seatWidth / 2);
                    star.setAttribute('y', 40 + rowIndex * (seatHeight + seatSpacing) + seatHeight / 2 + 5);
                    star.setAttribute('text-anchor', 'middle');
                    star.setAttribute('font-size', '20');
                    star.setAttribute('fill', 'gold');
                    star.textContent = '★';
                    seatGroup.appendChild(star);
                  }

                  seatMapContainer.appendChild(seatGroup);
                }
              });

              function selectSeat(seat, type, mapID, seatID) {
                if (type === 'unavailable' || type === 'available') {
                  // 切换状态
                  const newType = type === 'unavailable' ? 'available' : 'unavailable';
                  const newExistValue = newType === 'available';

                  // 更新座位外观
                  seat.setAttribute('fill', newType === 'available' ? '#32CD32' : '#FFFFFF');

                  // 向后端发送更新请求
                  fetch('/updateSeat', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ mapID, seatID, exist: newExistValue }),
                  })
                    .then((response) => response.json())
                    .then((data) => {
                      if (data.status === 'success') {
                        alert('Seat status updated successfully!');
                      } else {
                        //
                      }
                    })
                    .catch((error) => {
                      console.error('Error updating seat:', error);
                      alert('An error occurred while updating seat status.');
                    });
                } else if (type === 'selected') {
                  // 显示当前座位被谁购买
                  alert(`This seat is purchased by user: ${seat.userID}`);
                }
              }
            </script>
          </svg>
        </div>

        <!-- Legend -->
        <div class="text-center mb-4">
          <span class="badge bg-light border text-dark me-2">Unavailable Seat</span>
          <span class="badge bg-success me-2">Available Seat</span>
          <span class="badge bg-danger me-2">Selected Seat</span>
          <span class="badge bg-warning text-dark me-2">Luxury Seat (★)</span>
          <p class="mt-2">
            Click on the seat to set the seat type. Each click will change the seat type in the following order:
            Unavailable seat -> Available seat -> Deluxe Available seat -> Unavailable seat
          </p>
        </div>

        <div class="d-flex justify-content-center mb-4">
          <!-- Luxury 设置为 True -->
          <div class="d-flex align-items-center mx-3">
            <label for="luxuryTrueSeat" class="form-label me-2">Set Luxury (True):</label>
            <input type="text" id="luxuryTrueSeat" class="form-control me-2" placeholder="Enter Seat ID (e.g., A1)" />
            <button class="btn btn-success" onclick="updateLuxury(true)">Set</button>
          </div>

          <!-- Luxury 设置为 False -->
          <div class="d-flex align-items-center mx-3">
            <label for="luxuryFalseSeat" class="form-label me-2">Set Luxury (False):</label>
            <input type="text" id="luxuryFalseSeat" class="form-control me-2" placeholder="Enter Seat ID (e.g., B5)" />
            <button class="btn btn-danger" onclick="updateLuxury(false)">Set</button>
          </div>
        </div>

        <!-- Confirm Button -->
        <div class="text-center">
          <a href="../managePage1.html" class="btn btn-primary">Confirm</a>
        </div>
      </div>
    </main>
    <script>
      function updateLuxury(isLuxury) {
        // 根据 isLuxury 判断需要获取哪个输入框的值
        const inputID = isLuxury ? 'luxuryTrueSeat' : 'luxuryFalseSeat';
        const seatID = document.getElementById(inputID).value.trim();
        // 获取当前 URL 的路径部分
        const pathname = window.location.pathname;

        // 使用 split 分割路径，以斜杠 (/) 分隔，并获取最后一部分
        const mapID = pathname.split('/').pop();

        // 验证输入是否有效
        if (!seatID) {
          alert('Please enter a valid Seat ID.');
          return;
        }

        // 调用后端 API 更新数据库
        fetch('/updateluxury', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ mapID: mapID, seatID: seatID, luxury: isLuxury }),
        })
          .then((response) => response.json())
          .then((data) => {
            window.location.reload(); // 刷新页面
            if (data.status === 'success') {
              alert('Luxury attribute updated successfully!');
              window.location.reload(); // 刷新页面
            } else {
              alert(`Failed to update luxury attribute: ${data.message}`);
            }
          })
          .catch((error) => {
            // console.error('Error updating luxury attribute:', error);
          });
      }
    </script>
    <footer class="bg-dark text-white text-center p-3 fixed-bottom">
      EIE4432 Group Project ©22098292D Chen Ruiqi ©22096749D Zhang Chuhan
    </footer>
  </body>
</html>
